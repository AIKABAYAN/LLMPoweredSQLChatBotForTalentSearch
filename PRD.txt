Product Requirement Document (PRD)

Product: LLM-Powered SQL Chatbot for Talent Search
Version: v17
Date: 2025-08-26
1. Overview

Chatbot berbasis LLM untuk pencarian talent dengan kemampuan parsing query natural language yang canggih. Sistem mengubah query → intent JSON → SQL queries teroptimasi → hasil gabungan multi-tabel, dengan scoring otomatis, logging detail, dan berbagai opsi output format.
2. Goals

    Mendukung pencarian talent dengan filtering berbasis role, skills, projects, experience, education, timesheet

    Bedakan Must Have vs Nice to Have untuk skill dan project

    Scoring otomatis dengan breakdown detail

    Multi-platform: Telegram Bot, Desktop UI, dan REST API

    Logging terperinci di console + file

    Ekspor hasil ke CSV dan PDF

    Deduplication data untuk projects, education, dan timesheet

3. New Updates (v17)
3.1 Multi-Platform Support

    Telegram Bot: Integration lengkap dengan handler untuk /start, /help, dan natural language queries

    Desktop UI: Tkinter-based interface dengan tabs untuk chat, SQL logs, dan results

    REST API: FastAPI service dengan endpoint /search untuk integration dengan sistem lain

3.2 Enhanced Data Deduplication

    Projects: Deduplication berdasarkan nama_project + client + role + duration

    Education: Deduplication berdasarkan degree + school + graduation + major

    Timesheet: Deduplication berdasarkan date + task + project (limited to 8 recent entries)

3.3 Experience Calculation Improvement

    Total experience dihitung dari durasi project (bulan basis) bukan dari role

    Konversi otomatis: years → months (1 year = 12 months)

    Filter experience bekerja pada bulan basis untuk akurasi lebih baik

3.4 PDF Export Capability

    Generate laporan PDF lengkap dengan ReportLab

    Format profesional dengan styling yang baik

    Include semua informasi kandidat yang relevan

3.5 Enhanced Scoring System

    Skills matching: Must Have (+5), Nice to Have (+2)

    Projects matching: Must Have (+4), Nice to Have (+1)

    Experience filtering: Min/Max years dengan pengecualian jika tidak memenuhi

    Education scoring: S1 (+2), D3 itb (+3)

3.6 SQL Query Optimization

    Parameterized queries untuk keamanan

    Separate clauses untuk setiap tabel (role, project, education, timesheet)

    Name clause yang aman untuk setiap tabel

3.7 Environment Configuration

    Support .env file untuk configuration

    Telegram Bot Token dan Webhook URL management

    Flexible deployment options

4. Features
4.1 Intent Parsing

    Primary: LLM (Ollama + Qwen3) dengan prompt khusus

    Fallback: Heuristic parser dengan regex patterns

    Output JSON fields:

        role: Technical Leader, etc.

        skills: {must_have: [], nice_to_have: []}

        projects: {must_have: [], nice_to_have: []}

        experience: {min_months, max_months, min_years, max_years}

        education: {preferred, substitute}

        timesheet: {start_date, end_date, project}

        limit: {primary: 3, backup: 2}

        name: untuk pencarian spesifik

4.2 SQL Querying

Tabel yang digunakan:

    autobot_dataset_talent_profile_role_tech

    autobot_dataset_talent_profile_project_experiences

    autobot_dataset_talent_profile_education

    autobot_dataset_talent_timesheet

SQL dicatat ke: logs/sql_queries.txt
4.3 Scoring & Ranking System

    Skills: Must Have matched = +5, Nice to Have matched = +2

    Projects: Must Have matched = +4, Nice to Have matched = +1

    Experience: Filter min/max, bonus points for meeting criteria

    Education: S1 = +2, D3 ITB = +3

    Exclusion: Kandidat diexclude jika missing Must Have skills/projects

4.4 Output Formats

    Bucketed Sentences: Format ringkas untuk overview cepat

    Employee Summary: Format detail dengan semua informasi

    CSV Export: Raw data export untuk analisis lanjutan

    PDF Export: Laporan profesional untuk sharing

4.5 Advanced Filtering

    Timesheet Date Range: Filter berdasarkan tanggal timesheet

    Name-based Search: Pencarian spesifik per nama

    Quantity Limits: Control jumlah hasil (primary + backup)

4.6 Logging & Monitoring

    Console: Ringkas (INFO, ERROR)

    File logs/app.log: Detail (DEBUG, query, scoring breakdown)

    File logs/sql_queries.txt: SQL queries lengkap

    Session Tracking: Semua log memiliki session_id untuk debugging

5. Architecture Components
5.1 Core Modules

    intent_parser.py: Natural language → intent JSON

    query_executor.py: Execute SQL queries + merge results

    scoring.py: Scoring algorithm dengan breakdown

    formatter.py: Output formatting untuk berbagai use cases

5.2 Interface Modules

    telegram_bot.py: Telegram Bot integration

    ui.py: Desktop GUI application

    api_service.py: REST API service

5.3 Support Modules

    sql_builder.py: SQL query construction

    logger_helper.py: Logging utilities

    config.py: Configuration management

6. Non-Goals

    Tidak menggunakan semantic embeddings (pgvector)

    Tidak ada Must/Nice untuk role, education, timesheet (hanya untuk skills, projects, experience)

    Tidak support complex boolean logic dalam queries

    Tidak support image-based search atau file upload

7. Deployment Options

    Telegram Bot: Webhook atau polling mode

    Desktop Application: Standalone GUI app

    REST API: Microservice architecture

    Hybrid: Multiple interfaces simultaneously

8. Technical Requirements

    Python 3.8+

    PostgreSQL database

    Ollama LLM service (optional, untuk enhanced parsing)

    Telegram Bot Token (untuk bot functionality)

    ReportLab (untuk PDF export)